{"ast":null,"code":"import { getCateList } from \"../../api\";\nexport default {\n  name: \"Params\",\n  data() {\n    return {\n      // 商品分类列表\n      cateList: [],\n      //   级联选择框的配置对象\n      cateProps: {\n        value: \"cat_id\",\n        label: \"cat_name\",\n        children: \"children\"\n      },\n      //   级联选择框双向绑定\n      selectedCateList: [],\n      //   页签数据绑定\n      activeName: \"first\"\n    };\n  },\n  methods: {\n    getCateListed() {\n      // 获取所有商品分类\n      getCateList().then(({\n        data\n      }) => {\n        if (data.meta.status !== 200) {\n          return this.$message.error(\"获取商品分类失败\");\n        }\n        this.cateList = data.data;\n        // console.log(this.cateList);\n      });\n    },\n\n    // 级联选择框变化\n    handleChange() {\n      console.log(this.selectedCateList);\n      //   如果选中的不是三级分类就返回出去并清空数组\n      if (this.selectedCateList.length !== 3) {\n        this.selectedCateList = [];\n        return;\n      }\n    },\n    // 页签点击\n    handleTabClick() {\n      return;\n    }\n  },\n  computed: {\n    // 如果按钮需要被禁用 则返回true\n    isBtnDisabled() {\n      if (this.selectedCateList.length !== 3) {\n        return true;\n      }\n      return false;\n    }\n  },\n  mounted() {\n    // 获取所有商品分类\n    this.getCateListed();\n  }\n};","map":{"version":3,"names":["getCateList","name","data","cateList","cateProps","value","label","children","selectedCateList","activeName","methods","getCateListed","then","meta","status","$message","error","handleChange","console","log","length","handleTabClick","computed","isBtnDisabled","mounted"],"sources":["src/views/goods/Params.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 视图 -->\r\n    <el-card>\r\n      <!-- 警告 -->\r\n      <el-alert\r\n        show-icon\r\n        :close=\"false\"\r\n        title=\"注意：只允许为第三级分类设置相关参数\"\r\n        type=\"warning\"\r\n      >\r\n      </el-alert>\r\n      <!-- 选择商品分类 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            expand-trigger=\"hover\"\r\n            :options=\"cateList\"\r\n            :props=\"cateProps\"\r\n            v-model=\"selectedCateList\"\r\n            @change=\"handleChange\"\r\n          >\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 页签 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"first\">\r\n          <el-button type=\"primary\" :disabled=\"isBtnDisabled\"\r\n            >添加参数</el-button\r\n          >\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"second\">\r\n          <el-button type=\"primary\" :disabled=\"isBtnDisabled\"\r\n            >添加属性</el-button\r\n          >\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCateList } from \"../../api\";\r\nexport default {\r\n  name: \"Params\",\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      cateList: [],\r\n      //   级联选择框的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      //   级联选择框双向绑定\r\n      selectedCateList: [],\r\n      //   页签数据绑定\r\n      activeName: \"first\",\r\n    };\r\n  },\r\n  methods: {\r\n    getCateListed() {\r\n      // 获取所有商品分类\r\n      getCateList().then(({ data }) => {\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"获取商品分类失败\");\r\n        }\r\n        this.cateList = data.data;\r\n        // console.log(this.cateList);\r\n      });\r\n    },\r\n    // 级联选择框变化\r\n    handleChange() {\r\n      console.log(this.selectedCateList);\r\n      //   如果选中的不是三级分类就返回出去并清空数组\r\n      if (this.selectedCateList.length !== 3) {\r\n        this.selectedCateList = [];\r\n        return;\r\n      }\r\n    },\r\n    // 页签点击\r\n    handleTabClick() {\r\n      return;\r\n    },\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用 则返回true\r\n    isBtnDisabled() {\r\n      if (this.selectedCateList.length !== 3) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n  mounted() {\r\n    // 获取所有商品分类\r\n    this.getCateListed();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n</style>"],"mappings":"AAmDA,SAAAA,WAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,QAAA;MACA;MACAC,SAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACA;MACAC,gBAAA;MACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACA;MACAX,WAAA,GAAAY,IAAA;QAAAV;MAAA;QACA,IAAAA,IAAA,CAAAW,IAAA,CAAAC,MAAA;UACA,YAAAC,QAAA,CAAAC,KAAA;QACA;QACA,KAAAb,QAAA,GAAAD,IAAA,CAAAA,IAAA;QACA;MACA;IACA;;IACA;IACAe,aAAA;MACAC,OAAA,CAAAC,GAAA,MAAAX,gBAAA;MACA;MACA,SAAAA,gBAAA,CAAAY,MAAA;QACA,KAAAZ,gBAAA;QACA;MACA;IACA;IACA;IACAa,eAAA;MACA;IACA;EACA;EACAC,QAAA;IACA;IACAC,cAAA;MACA,SAAAf,gBAAA,CAAAY,MAAA;QACA;MACA;MACA;IACA;EACA;EACAI,QAAA;IACA;IACA,KAAAb,aAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}