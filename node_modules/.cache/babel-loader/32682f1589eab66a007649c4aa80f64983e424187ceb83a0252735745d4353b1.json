{"ast":null,"code":"import * as echarts from \"echarts\";\nimport { getCross } from \"../../api\";\nexport default {\n  name: \"Report\",\n  data() {\n    return {\n      // 需要合并的数据\n      options: {\n        title: {\n          text: \"用户来源\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#E9EEF3\"\n            }\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: [{\n          boundaryGap: false\n        }],\n        yAxis: [{\n          type: \"value\"\n        }]\n      }\n    };\n  },\n  mounted() {\n    // 初始化\n    var myChart = echarts.init(document.getElementById(\"main\"));\n    getCross().then(({\n      data\n    }) => {\n      if (data.meta.status !== 200) {\n        return this.$message.error(\"获取折线图失败\");\n      }\n      // 展示数据\n      const result = {\n        ...this.options,\n        ...data.data\n      };\n      myChart.setOption(result);\n    });\n  }\n};","map":{"version":3,"names":["echarts","getCross","name","data","options","title","text","tooltip","trigger","axisPointer","type","label","backgroundColor","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","mounted","myChart","init","document","getElementById","then","meta","status","$message","error","result","setOption"],"sources":["src/views/report/report.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <div id=\"main\" style=\"width: 600px; height: 400px\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nimport { getCross } from \"../../api\";\r\nexport default {\r\n  name: \"Report\",\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: \"用户来源\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            label: {\r\n              backgroundColor: \"#E9EEF3\",\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false,\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    // 初始化\r\n    var myChart = echarts.init(document.getElementById(\"main\"));\r\n\r\n    getCross().then(({ data }) => {\r\n      if (data.meta.status !== 200) {\r\n        return this.$message.error(\"获取折线图失败\");\r\n      }\r\n      // 展示数据\r\n      const result = { ...this.options, ...data.data };\r\n      myChart.setOption(result);\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"AAeA,YAAAA,OAAA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,OAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;YACAC,KAAA;cACAC,eAAA;YACA;UACA;QACA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA,GACA;UACAC,WAAA;QACA,EACA;QACAC,KAAA,GACA;UACAV,IAAA;QACA;MAEA;IACA;EACA;EACAW,QAAA;IACA;IACA,IAAAC,OAAA,GAAAtB,OAAA,CAAAuB,IAAA,CAAAC,QAAA,CAAAC,cAAA;IAEAxB,QAAA,GAAAyB,IAAA;MAAAvB;IAAA;MACA,IAAAA,IAAA,CAAAwB,IAAA,CAAAC,MAAA;QACA,YAAAC,QAAA,CAAAC,KAAA;MACA;MACA;MACA,MAAAC,MAAA;QAAA,QAAA3B,OAAA;QAAA,GAAAD,IAAA,CAAAA;MAAA;MACAmB,OAAA,CAAAU,SAAA,CAAAD,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}