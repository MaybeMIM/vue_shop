{"ast":null,"code":"import { getCateList, getParamsList, addParams, editParams } from \"../../api\";\nexport default {\n  name: \"Params\",\n  data() {\n    return {\n      // 商品分类列表\n      cateList: [],\n      //   级联选择框的配置对象\n      cateProps: {\n        value: \"cat_id\",\n        label: \"cat_name\",\n        children: \"children\"\n      },\n      //   级联选择框双向绑定\n      selectedCateList: [],\n      //   页签数据绑定\n      activeName: \"many\",\n      manyTableData: [],\n      onlyTableData: [],\n      //   添加对话框\n      addVisible: false,\n      //   修改对话框\n      editVisible: false,\n      //   添加参数表单数据\n      addForm: {\n        attr_name: \"\"\n      },\n      //   修改参数表单数据\n      editForm: {},\n      rules: {\n        attr_name: {\n          required: true,\n          message: \"请输入名称\",\n          trigger: \"blur\"\n        }\n      }\n    };\n  },\n  methods: {\n    getCateListed() {\n      // 获取所有商品分类\n      getCateList().then(({\n        data\n      }) => {\n        if (data.meta.status !== 200) {\n          return this.$message.error(\"获取商品分类失败\");\n        }\n        this.cateList = data.data;\n        // console.log(this.cateList);\n      });\n    },\n\n    // 获取参数列表数据\n    getParamsData() {\n      //   如果选中的不是三级分类就返回出去并清空数组\n      if (this.selectedCateList.length !== 3) {\n        this.selectedCateList = [];\n        return;\n      }\n      //   选择了三级分类 根据所选分类的id，和当前所处的面板 获取对应的参数\n      getParamsList(this.cateId, {\n        params: {\n          sel: this.activeName\n        }\n      }).then(({\n        data\n      }) => {\n        //   console.log(data);\n        if (data.meta.status !== 200) {\n          return this.$message.error(\"获取商品参数失败\");\n        }\n        if (this.activeName === \"many\") {\n          this.manyTableData = data.data;\n        } else {\n          this.onlyTableData = data.data;\n        }\n      });\n    },\n    // 页签点击\n    handleTabClick() {\n      // 获取参数列表数据\n      this.getParamsData();\n    },\n    // 级联选择框变化\n    handleChange() {\n      // 获取参数列表数据\n      this.getParamsData();\n    },\n    // 对话框关闭\n    addDialogClose() {\n      this.$refs.addForm.resetFields();\n    },\n    editDialogClose() {\n      this.$refs.editForm.resetFields();\n    },\n    // 添加参数\n    addparams() {\n      this.$refs.addForm.validate(valid => {\n        if (!valid) return;\n        addParams(this.cateId, {\n          attr_name: this.addForm.attr_name,\n          attr_sel: this.activeName\n        }).then(({\n          data\n        }) => {\n          //   console.log(data);\n          if (data.meta.status !== 201) {\n            return this.$message.error(\"添加商品参数失败\");\n          }\n          this.$message.success(\"添加商品参数成功\");\n        });\n        this.addVisible = false;\n        this.getParamsData();\n      });\n    },\n    // 展示编辑对话框\n    showEditDialog(attr_id) {\n      editParams(this.cateId, attr_id, {\n        attr_sel: this.activeName\n      }).then(({\n        data\n      }) => {\n        console.log(data);\n        if (data.meta.status !== 200) {\n          return this.$message.error(\"获取商品参数失败\");\n        }\n        this.$message.success(\"获取商品参数成功\");\n        this.editForm = data.data;\n      });\n      this.editVisible = true;\n    },\n    // 编辑参数\n    editparams() {}\n  },\n  computed: {\n    // 如果按钮需要被禁用 则返回true\n    isBtnDisabled() {\n      if (this.selectedCateList.length !== 3) {\n        return true;\n      }\n      return false;\n    },\n    // 当前选中的三级分类id\n    cateId() {\n      if (this.selectedCateList.length === 3) {\n        return this.selectedCateList[2];\n      }\n      return null;\n    }\n    // 动态计算标题的文本\n    // titleText() {\n    //   if (this.activeName === \"many\") {\n    //     return \"动态参数\";\n    //   } else {\n    //     return \"静态属性\";\n    //   }\n    // },\n  },\n\n  mounted() {\n    // 获取所有商品分类\n    this.getCateListed();\n  }\n};","map":{"version":3,"names":["getCateList","getParamsList","addParams","editParams","name","data","cateList","cateProps","value","label","children","selectedCateList","activeName","manyTableData","onlyTableData","addVisible","editVisible","addForm","attr_name","editForm","rules","required","message","trigger","methods","getCateListed","then","meta","status","$message","error","getParamsData","length","cateId","params","sel","handleTabClick","handleChange","addDialogClose","$refs","resetFields","editDialogClose","addparams","validate","valid","attr_sel","success","showEditDialog","attr_id","console","log","editparams","computed","isBtnDisabled","mounted"],"sources":["src/views/goods/Params.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 视图 -->\r\n    <el-card>\r\n      <!-- 警告 -->\r\n      <el-alert\r\n        show-icon\r\n        :close=\"false\"\r\n        title=\"注意：只允许为第三级分类设置相关参数\"\r\n        type=\"warning\"\r\n      >\r\n      </el-alert>\r\n      <!-- 选择商品分类 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            expand-trigger=\"hover\"\r\n            :options=\"cateList\"\r\n            :props=\"cateProps\"\r\n            v-model=\"selectedCateList\"\r\n            @change=\"handleChange\"\r\n          >\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 页签 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <el-button\r\n            type=\"primary\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\"></el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button\r\n            type=\"primary\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addVisible = true\"\r\n            >添加属性</el-button\r\n          >\r\n          <!-- 静态属性表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\"></el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"属性名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"activeName === 'many' ? '动态参数' : '静态属性'\"\r\n      :visible.sync=\"addVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClose\"\r\n    >\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"rules\"\r\n        ref=\"addForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item\r\n          :label=\"activeName === 'many' ? '动态参数' : '静态属性'\"\r\n          prop=\"attr_name\"\r\n        >\r\n          <el-input v-model=\"addForm.attr_name\"></el-input> </el-form-item\r\n      ></el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addparams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n    <el-dialog\r\n      title=\"修改\"\r\n      :visible.sync=\"editVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClose\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"rules\"\r\n        ref=\"editForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item\r\n          :label=\"activeName === 'many' ? '动态参数' : '静态属性'\"\r\n          prop=\"attr_name\"\r\n        >\r\n          <el-input v-model=\"editForm.attr_name\"></el-input> </el-form-item\r\n      ></el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editparams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCateList, getParamsList, addParams, editParams } from \"../../api\";\r\nexport default {\r\n  name: \"Params\",\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      cateList: [],\r\n      //   级联选择框的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      //   级联选择框双向绑定\r\n      selectedCateList: [],\r\n      //   页签数据绑定\r\n      activeName: \"many\",\r\n      manyTableData: [],\r\n      onlyTableData: [],\r\n      //   添加对话框\r\n      addVisible: false,\r\n      //   修改对话框\r\n      editVisible: false,\r\n      //   添加参数表单数据\r\n      addForm: {\r\n        attr_name: \"\",\r\n      },\r\n      //   修改参数表单数据\r\n      editForm: {},\r\n      rules: {\r\n        attr_name: { required: true, message: \"请输入名称\", trigger: \"blur\" },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    getCateListed() {\r\n      // 获取所有商品分类\r\n      getCateList().then(({ data }) => {\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"获取商品分类失败\");\r\n        }\r\n        this.cateList = data.data;\r\n        // console.log(this.cateList);\r\n      });\r\n    },\r\n    // 获取参数列表数据\r\n    getParamsData() {\r\n      //   如果选中的不是三级分类就返回出去并清空数组\r\n      if (this.selectedCateList.length !== 3) {\r\n        this.selectedCateList = [];\r\n        return;\r\n      }\r\n      //   选择了三级分类 根据所选分类的id，和当前所处的面板 获取对应的参数\r\n      getParamsList(this.cateId, { params: { sel: this.activeName } }).then(\r\n        ({ data }) => {\r\n          //   console.log(data);\r\n          if (data.meta.status !== 200) {\r\n            return this.$message.error(\"获取商品参数失败\");\r\n          }\r\n          if (this.activeName === \"many\") {\r\n            this.manyTableData = data.data;\r\n          } else {\r\n            this.onlyTableData = data.data;\r\n          }\r\n        }\r\n      );\r\n    },\r\n    // 页签点击\r\n    handleTabClick() {\r\n      // 获取参数列表数据\r\n      this.getParamsData();\r\n    },\r\n    // 级联选择框变化\r\n    handleChange() {\r\n      // 获取参数列表数据\r\n      this.getParamsData();\r\n    },\r\n    // 对话框关闭\r\n    addDialogClose() {\r\n      this.$refs.addForm.resetFields();\r\n    },\r\n    editDialogClose() {\r\n      this.$refs.editForm.resetFields();\r\n    },\r\n\r\n    // 添加参数\r\n    addparams() {\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (!valid) return;\r\n        addParams(this.cateId, {\r\n          attr_name: this.addForm.attr_name,\r\n          attr_sel: this.activeName,\r\n        }).then(({ data }) => {\r\n          //   console.log(data);\r\n          if (data.meta.status !== 201) {\r\n            return this.$message.error(\"添加商品参数失败\");\r\n          }\r\n          this.$message.success(\"添加商品参数成功\");\r\n        });\r\n        this.addVisible = false;\r\n        this.getParamsData();\r\n      });\r\n    },\r\n    // 展示编辑对话框\r\n    showEditDialog(attr_id) {\r\n      editParams(this.cateId, attr_id, { attr_sel: this.activeName }).then(\r\n        ({ data }) => {\r\n          console.log(data);\r\n          if (data.meta.status !== 200) {\r\n            return this.$message.error(\"获取商品参数失败\");\r\n          }\r\n          this.$message.success(\"获取商品参数成功\");\r\n          this.editForm = data.data;\r\n        }\r\n      );\r\n      this.editVisible = true;\r\n    },\r\n    // 编辑参数\r\n    editparams() {},\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用 则返回true\r\n    isBtnDisabled() {\r\n      if (this.selectedCateList.length !== 3) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 当前选中的三级分类id\r\n    cateId() {\r\n      if (this.selectedCateList.length === 3) {\r\n        return this.selectedCateList[2];\r\n      }\r\n      return null;\r\n    },\r\n    // 动态计算标题的文本\r\n    // titleText() {\r\n    //   if (this.activeName === \"many\") {\r\n    //     return \"动态参数\";\r\n    //   } else {\r\n    //     return \"静态属性\";\r\n    //   }\r\n    // },\r\n  },\r\n  mounted() {\r\n    // 获取所有商品分类\r\n    this.getCateListed();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}