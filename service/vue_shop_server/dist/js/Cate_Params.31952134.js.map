{"version":3,"file":"js/Cate_Params.31952134.js","mappings":"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","sources":["webpack://vue_shop/./src/views/goods/Cate.vue","webpack://vue_shop/src/views/goods/Cate.vue","webpack://vue_shop/./src/views/goods/Cate.vue?5f95","webpack://vue_shop/./src/views/goods/Cate.vue?afec","webpack://vue_shop/./src/views/goods/Params.vue","webpack://vue_shop/src/views/goods/Params.vue","webpack://vue_shop/./src/views/goods/Params.vue?ef62","webpack://vue_shop/./src/views/goods/Params.vue?fb11","webpack://vue_shop/./src/utils/request.js","webpack://vue_shop/./src/api/index.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCate}},[_vm._v(\"添加分类\")])],1)],1),_c('tree-table',{staticClass:\"tree-table\",attrs:{\"data\":_vm.cateList,\"columns\":_vm.columns,\"selection-type\":false,\"expand-type\":false,\"show-index\":\"\",\"border\":\"\",\"show-row-hover\":false},scopedSlots:_vm._u([{key:\"isOk\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"三级\")])]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.handleCateFrom(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.deletecate(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.querInfo.pagenum,\"page-sizes\":[3, 5, 10, 12],\"page-size\":_vm.querInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addVisible=$event},\"close\":_vm.addCateClose}},[_c('el-form',{ref:\"addCateForm\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称:\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类:\",\"prop\":\"cat_name\"}},[_c('el-cascader',{staticClass:\"el-cascader\",attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.parentCateList,\"props\":_vm.cateProps,\"clearable\":\"\",\"change-on-select\":\"\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"编辑分类\",\"visible\":_vm.editVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editVisible=$event}}},[_c('el-form',{ref:\"editCateForm\",attrs:{\"model\":_vm.editFrom,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称:\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.editFrom.cat_name),callback:function ($$v) {_vm.$set(_vm.editFrom, \"cat_name\", $$v)},expression:\"editFrom.cat_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editCateForm}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCate\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格 -->\r\n      <tree-table\r\n        class=\"tree-table\"\r\n        :data=\"cateList\"\r\n        :columns=\"columns\"\r\n        :selection-type=\"false\"\r\n        :expand-type=\"false\"\r\n        show-index\r\n        border\r\n        :show-row-hover=\"false\"\r\n      >\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isOk\" slot-scope=\"scope\">\r\n          <i\r\n            class=\"el-icon-success\"\r\n            v-if=\"scope.row.cat_deleted === false\"\r\n            style=\"color: lightgreen\"\r\n          ></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red\"></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.cat_level === 0\">一级</el-tag>\r\n          <el-tag type=\"success\" v-else-if=\"scope.row.cat_level === 1\"\r\n            >二级</el-tag\r\n          >\r\n          <el-tag type=\"warning\" v-else>三级</el-tag>\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"handleCateFrom(scope.row)\"\r\n            >编辑</el-button\r\n          >\r\n          <!-- 删除 -->\r\n          <el-button\r\n            type=\"danger\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"deletecate(scope.row.cat_id)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"querInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 12]\"\r\n        :page-size=\"querInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n    <!-- 对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addVisible\"\r\n      width=\"50%\"\r\n      @close=\"addCateClose\"\r\n    >\r\n      <!-- 添加分类表单 -->\r\n      <el-form\r\n        :model=\"addCateForm\"\r\n        :rules=\"rules\"\r\n        ref=\"addCateForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"分类名称:\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类:\" prop=\"cat_name\">\r\n          <!-- options 用来指定数据源 -->\r\n          <!-- props 用来指定配置对象 -->\r\n          <el-cascader\r\n            class=\"el-cascader\"\r\n            expand-trigger=\"hover\"\r\n            :options=\"parentCateList\"\r\n            v-model=\"selectedKeys\"\r\n            :props=\"cateProps\"\r\n            clearable\r\n            change-on-select\r\n            @change=\"handleChange\"\r\n          >\r\n          </el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 编辑对话框 -->\r\n    <el-dialog title=\"编辑分类\" :visible.sync=\"editVisible\" width=\"50%\">\r\n      <el-form\r\n        :model=\"editFrom\"\r\n        :rules=\"rules\"\r\n        ref=\"editCateForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"分类名称:\" prop=\"cat_name\">\r\n          <el-input v-model=\"editFrom.cat_name\"></el-input> </el-form-item\r\n      ></el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editCateForm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCateList, addCate, editCate, deleteCate } from \"../../api\";\r\nexport default {\r\n  name: \"cate\",\r\n  data() {\r\n    return {\r\n      // 查询商品列表条件\r\n      querInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5,\r\n      },\r\n      // 商品分类数据列表\r\n      cateList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // 为table指定列的各项定义\r\n      columns: [\r\n        {\r\n          label: \"分类名称\",\r\n          prop: \"cat_name\",\r\n        },\r\n        {\r\n          label: \"是否有效\",\r\n          // 将当前列定义为模板列\r\n          type: \"template\",\r\n          // 当前模板的名称\r\n          template: \"isOk\",\r\n        },\r\n        {\r\n          label: \"排序\",\r\n          // 将当前列定义为模板列\r\n          type: \"template\",\r\n          // 当前模板的名称\r\n          template: \"order\",\r\n        },\r\n        {\r\n          label: \"操作\",\r\n          // 将当前列定义为模板列\r\n          type: \"template\",\r\n          // 当前模板的名称\r\n          template: \"opt\",\r\n        },\r\n      ],\r\n      // 添加分类对话框\r\n      addVisible: false,\r\n      editVisible: false,\r\n      // 商品分类表单数据对象\r\n      addCateForm: {\r\n        // 将要添加的分类名称\r\n        cat_name: \"\",\r\n        // 父级分类的id\r\n        cat_pid: 0,\r\n        // 当前默认添加分类为一级分类\r\n        cat_level: 0,\r\n      },\r\n      // 添加分类的表单验证规则\r\n      rules: {\r\n        cat_name: {\r\n          required: true,\r\n          message: \"请输入分类名称\",\r\n          trigger: \"blur\",\r\n        },\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 指定级联选择器的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      // 选中的父级分类id数组\r\n      selectedKeys: [],\r\n      editFrom: {},\r\n    };\r\n  },\r\n  methods: {\r\n    getCateListed() {\r\n      getCateList({ params: this.querInfo }).then(({ data }) => {\r\n        // console.log(data);\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"获取商品分类失败\");\r\n        }\r\n        this.cateList = data.data.result;\r\n        this.total = data.data.total;\r\n      });\r\n    },\r\n    // 监听pagesize变化\r\n    handleSizeChange(newSize) {\r\n      // console.log(newSize);\r\n      this.querInfo.pagesize = newSize;\r\n      this.getCateListed();\r\n    },\r\n    // 监听 页码值的事件\r\n    handleCurrentChange(newPage) {\r\n      // console.log(newPage);\r\n      this.querInfo.pagenum = newPage;\r\n      this.getCateListed();\r\n    },\r\n    // 选择项发生变化\r\n    handleChange() {\r\n      // 如果 selecKeys 数组中的 length 大于0 ，证明选中了父级分类\r\n      // 反之 就没有选择任何父级分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 当前父级分类id 永远为数组中的最后一项\r\n        this.addCateForm.cat_pid =\r\n          this.selectedKeys[this.selectedKeys.length - 1];\r\n        // 当前分类的等级 为数组的长度\r\n        this.addCateForm.cat_level = this.selectedKeys.length;\r\n        return;\r\n      } else {\r\n        // 当前父级分类id\r\n        this.addCateForm.cat_pid = 0;\r\n        // 当前分类的等级 为数组的长度\r\n        this.addCateForm.cat_level = 0;\r\n      }\r\n    },\r\n    // 对话框关闭 重置表单\r\n    addCateClose() {\r\n      this.$refs.addCateForm.resetFields();\r\n      this.selectedKeys = [];\r\n      this.addCateForm.cat_level = 0;\r\n      this.addCateForm.cat_pid = 0;\r\n    },\r\n    // 添加分类商品\r\n    showAddCate() {\r\n      // 先获取父级分类的数据列表\r\n      getCateList({ params: { type: 2 } }).then(({ data }) => {\r\n        // console.log(data);\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"获取父级分类失败\");\r\n        }\r\n        this.parentCateList = data.data;\r\n      });\r\n      // 再展示对话框\r\n      this.addVisible = true;\r\n    },\r\n    // 确定商品分类\r\n    addCate() {\r\n      this.$refs.addCateForm.validate((valid) => {\r\n        if (!valid) return;\r\n        // 通过验证 发起添加商品请求\r\n        addCate(this.addCateForm).then(({ data }) => {\r\n          if (data.meta.status !== 201) {\r\n            return this.$message.error(\"添加分类失败\");\r\n          }\r\n          this.$message.success(\"添加分类成功\");\r\n        });\r\n      });\r\n      this.getCateListed();\r\n\r\n      this.addVisible = false;\r\n    },\r\n    // 编辑\r\n    handleCateFrom(row) {\r\n      this.editFrom = JSON.parse(JSON.stringify(row));\r\n      this.editVisible = true;\r\n    },\r\n    // 确定编辑分类\r\n    editCateForm() {\r\n      this.$refs.editCateForm.validate((valid) => {\r\n        if (!valid) return;\r\n        editCate(this.editFrom).then(({ data }) => {\r\n          // console.log(data);\r\n          if (data.meta.status !== 200) {\r\n            return this.$message.error(\"编辑分类失败\");\r\n          }\r\n          this.$message.success(\"编辑分类成功\");\r\n          this.addCateForm.cat_name = data.data.cat_name;\r\n        });\r\n      });\r\n\r\n      this.addVisible = false;\r\n    },\r\n    // 删除分类\r\n    deletecate(id) {\r\n      this.$confirm(\"此操作将永久删除该分类, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          deleteCate(id).then(({ data }) => {\r\n            console.log(data);\r\n            if (data.meta.status !== 200) {\r\n              return this.$message.error(\"删除分类失败\");\r\n            }\r\n            this.$message.success(\"删除分类成功\");\r\n            this.getCateListed();\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getCateListed();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.tree-table {\r\n  margin-top: 15px;\r\n}\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=44308081&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=44308081&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"44308081\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"参数列表\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"show-icon\":\"\",\"close\":false,\"title\":\"注意：只允许为第三级分类设置相关参数\",\"type\":\"warning\"}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.cateList,\"props\":_vm.cateProps},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateList),callback:function ($$v) {_vm.selectedCateList=$$v},expression:\"selectedCateList\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,staticClass:\"tag\",attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(\" \"+_vm._s(item)+\" \")])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeparams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,staticClass:\"tag\",attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(\" \"+_vm._s(item)+\" \")])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeparams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.activeName === 'many' ? '动态参数' : '静态属性',\"visible\":_vm.addVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addVisible=$event},\"close\":_vm.addDialogClose}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.activeName === 'many' ? '动态参数' : '静态属性',\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addparams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"修改\",\"visible\":_vm.editVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editVisible=$event},\"close\":_vm.editDialogClose}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.activeName === 'many' ? '动态参数' : '静态属性',\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editparams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 视图 -->\r\n    <el-card>\r\n      <!-- 警告 -->\r\n      <el-alert\r\n        show-icon\r\n        :close=\"false\"\r\n        title=\"注意：只允许为第三级分类设置相关参数\"\r\n        type=\"warning\"\r\n      >\r\n      </el-alert>\r\n      <!-- 选择商品分类 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            expand-trigger=\"hover\"\r\n            :options=\"cateList\"\r\n            :props=\"cateProps\"\r\n            v-model=\"selectedCateList\"\r\n            @change=\"handleChange\"\r\n          >\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 页签 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <el-button\r\n            type=\"primary\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag\r\n                  class=\"tag\"\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClose(i, scope.row)\"\r\n                >\r\n                  {{ item }}\r\n                </el-tag>\r\n                <!-- 输入文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- tag添加按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeparams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button\r\n            type=\"primary\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addVisible = true\"\r\n            >添加属性</el-button\r\n          >\r\n          <!-- 静态属性表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag\r\n                  class=\"tag\"\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClose(i, scope.row)\"\r\n                >\r\n                  {{ item }}\r\n                </el-tag>\r\n                <!-- 输入文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- tag添加按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"属性名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeparams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"activeName === 'many' ? '动态参数' : '静态属性'\"\r\n      :visible.sync=\"addVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClose\"\r\n    >\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"rules\"\r\n        ref=\"addForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item\r\n          :label=\"activeName === 'many' ? '动态参数' : '静态属性'\"\r\n          prop=\"attr_name\"\r\n        >\r\n          <el-input v-model=\"addForm.attr_name\"></el-input> </el-form-item\r\n      ></el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addparams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n    <el-dialog\r\n      title=\"修改\"\r\n      :visible.sync=\"editVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClose\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"rules\"\r\n        ref=\"editForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item\r\n          :label=\"activeName === 'many' ? '动态参数' : '静态属性'\"\r\n          prop=\"attr_name\"\r\n        >\r\n          <el-input v-model=\"editForm.attr_name\"></el-input> </el-form-item\r\n      ></el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editparams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getCateList,\r\n  getParamsList,\r\n  addParams,\r\n  getParams,\r\n  editParams,\r\n  deleteParams,\r\n} from \"../../api\";\r\nexport default {\r\n  name: \"Params\",\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      cateList: [],\r\n      //   级联选择框的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      //   级联选择框双向绑定\r\n      selectedCateList: [],\r\n      //   页签数据绑定\r\n      activeName: \"many\",\r\n      manyTableData: [],\r\n      onlyTableData: [],\r\n      //   添加对话框\r\n      addVisible: false,\r\n      //   修改对话框\r\n      editVisible: false,\r\n      //   添加参数表单数据\r\n      addForm: {\r\n        attr_name: \"\",\r\n      },\r\n      //   修改参数表单数据\r\n      editForm: {},\r\n      rules: {\r\n        attr_name: { required: true, message: \"请输入名称\", trigger: \"blur\" },\r\n      },\r\n      //   默认隐藏文本输入框\r\n      //   inputVisible: false,\r\n      //   文本框中输入的内容\r\n      //   inputValue: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    getCateListed() {\r\n      // 获取所有商品分类\r\n      getCateList().then(({ data }) => {\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"获取商品分类失败\");\r\n        }\r\n        this.cateList = data.data;\r\n        // console.log(this.cateList);\r\n      });\r\n    },\r\n    // 获取参数列表数据\r\n    getParamsData() {\r\n      //   如果选中的不是三级分类就返回出去并清空数组\r\n      if (this.selectedCateList.length !== 3) {\r\n        this.selectedCateList = [];\r\n        return;\r\n      }\r\n      //   选择了三级分类 根据所选分类的id，和当前所处的面板 获取对应的参数\r\n      getParamsList(this.cateId, { params: { sel: this.activeName } }).then(\r\n        ({ data }) => {\r\n          //   console.log(data);\r\n          if (data.meta.status !== 200) {\r\n            return this.$message.error(\"获取商品参数失败\");\r\n          }\r\n          // 循环将每个参数中的小面板筛选出来\r\n          data.data.forEach((item) => {\r\n            // 判断是否为空  为空就给空数组 不然会有空白的tag标签出来\r\n            item.attr_vals = item.attr_vals ? item.attr_vals.split(\" \") : [];\r\n            // 添加一个布尔值 控制文本框的显示与隐藏\r\n            item.inputVisible = false;\r\n            // 文本框中输入的值\r\n            item.inputValue = \"\";\r\n          });\r\n          if (this.activeName === \"many\") {\r\n            this.manyTableData = data.data;\r\n          } else {\r\n            this.onlyTableData = data.data;\r\n          }\r\n        }\r\n      );\r\n    },\r\n    // 页签点击\r\n    handleTabClick() {\r\n      // 获取参数列表数据\r\n      this.getParamsData();\r\n    },\r\n    // 级联选择框变化\r\n    handleChange() {\r\n      // 获取参数列表数据\r\n      this.getParamsData();\r\n    },\r\n    // 对话框关闭\r\n    addDialogClose() {\r\n      this.$refs.addForm.resetFields();\r\n    },\r\n    editDialogClose() {\r\n      this.$refs.editForm.resetFields();\r\n    },\r\n\r\n    // 添加参数\r\n    addparams() {\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (!valid) return;\r\n        addParams(this.cateId, {\r\n          attr_name: this.addForm.attr_name,\r\n          attr_sel: this.activeName,\r\n        }).then(({ data }) => {\r\n          //   console.log(data);\r\n          if (data.meta.status !== 201) {\r\n            return this.$message.error(\"添加商品参数失败\");\r\n          }\r\n          this.$message.success(\"添加商品参数成功\");\r\n        });\r\n        this.addVisible = false;\r\n        this.getParamsData();\r\n      });\r\n    },\r\n    // 展示编辑对话框\r\n    showEditDialog(attr_id) {\r\n      getParams(this.cateId, attr_id, this.activeName).then(({ data }) => {\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"获取商品参数失败\");\r\n        }\r\n        this.editForm = data.data;\r\n      });\r\n      this.editVisible = true;\r\n    },\r\n    // 编辑参数\r\n    editparams() {\r\n      this.$refs.editForm.validate((valid) => {\r\n        if (!valid) return;\r\n        editParams(this.cateId, this.editForm.attr_id, {\r\n          attr_name: this.editForm.attr_name,\r\n          attr_sel: this.activeName,\r\n        }).then(({ data }) => {\r\n          //   console.log(data);\r\n          if (data.meta.status !== 200) {\r\n            return this.$message.error(\"修改商品参数失败\");\r\n          }\r\n          this.$message.success(\"修改商品参数成功\");\r\n          this.getParamsData();\r\n          this.editVisible = false;\r\n        });\r\n      });\r\n    },\r\n    // 删除参数\r\n    removeparams(id) {\r\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          // 发起请求删除用户信息\r\n          deleteParams(this.cateId, id).then(({}) => {\r\n            this.getParamsData();\r\n          });\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"删除成功!\",\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    // 文本框失去焦点 按下回车键都会触发\r\n    handleInputConfirm(row) {\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = \"\";\r\n        row.inputVisible = false;\r\n        return;\r\n      }\r\n      // 如果没有return 则需要做后续处理\r\n      row.attr_vals.push(row.inputValue.trim());\r\n      row.inputValue = \"\";\r\n      row.inputVisible = false;\r\n      //   发起请求 保存这次操作\r\n      editParams(this.cateId, row.attr_id, {\r\n        attr_name: row.attr_name,\r\n        attr_sel: row.attr_sel,\r\n        attr_vals: row.attr_vals.join(\" \"),\r\n      }).then(({ data }) => {\r\n        // console.log(data);\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"修改商品参数失败\");\r\n        }\r\n        this.$message.success(\"修改商品参数成功\");\r\n      });\r\n    },\r\n    // 点击按钮 展示输入文本框\r\n    showInput(row) {\r\n      row.inputVisible = true;\r\n      // nexTick 页面上的元素被重新渲染更新后执行回调中的代码\r\n      this.$nextTick((_) => {\r\n        // 从组件实例 文本框 中获得 原始输入框对象 实现自动获得焦点\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    // 删除对应的参数可选项\r\n    handleClose(i, row) {\r\n      row.attr_vals.splice(i, 1);\r\n      //   发起请求 保存这次操作\r\n      editParams(this.cateId, row.attr_id, {\r\n        attr_name: row.attr_name,\r\n        attr_sel: row.attr_sel,\r\n        attr_vals: row.attr_vals.join(\" \"),\r\n      }).then(({ data }) => {\r\n        // console.log(data);\r\n        if (data.meta.status !== 200) {\r\n          return this.$message.error(\"修改商品参数失败\");\r\n        }\r\n        this.$message.success(\"修改商品参数成功\");\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用 则返回true\r\n    isBtnDisabled() {\r\n      if (this.selectedCateList.length !== 3) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 当前选中的三级分类id\r\n    cateId() {\r\n      if (this.selectedCateList.length === 3) {\r\n        return this.selectedCateList[2];\r\n      }\r\n      return null;\r\n    },\r\n    // 动态计算标题的文本\r\n    // titleText() {\r\n    //   if (this.activeName === \"many\") {\r\n    //     return \"动态参数\";\r\n    //   } else {\r\n    //     return \"静态属性\";\r\n    //   }\r\n    // },\r\n  },\r\n  mounted() {\r\n    // 获取所有商品分类\r\n    this.getCateListed();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n.tag {\r\n  margin: 10px;\r\n}\r\n.input-new-tag {\r\n  width: 150px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=c7afbfee&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=c7afbfee&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c7afbfee\",\n  null\n  \n)\n\nexport default component.exports","// 二次封装axios\r\nimport axios from \"axios\";\r\n\r\nconst http = axios.create({\r\n    // 通用请求地址前缀\r\n    baseURL: 'http://127.0.0.1:8888/api/private/v1/',\r\n    // 超时时间 5s\r\n    timeout: 5000,\r\n\r\n})\r\n\r\n\r\n// 添加请求拦截器\r\nhttp.interceptors.request.use(function (config) {\r\n    // 在发送之前做什么\r\n    // 为请求体对象，添加token验证的Authorization字段\r\n    config.headers.Authorization = window.sessionStorage.getItem('token')\r\n    return config;\r\n}, function (error) {\r\n    // 对请求错误做什么\r\n    return Promise.reject(error);\r\n})\r\n\r\n// 添加响应拦截器\r\nhttp.interceptors.response.use(function (response) {\r\n    // 对响应数据做什么\r\n    return response;\r\n}, function (error) {\r\n    // 对响应错误做什么\r\n    return Promise.reject(error);\r\n})\r\n\r\nexport default http","// 定义发送请求的总文件\r\nimport http from \"@/utils/request\";\r\n\r\n// 1.2.1 定义请求登录数据接口\r\nexport const Login = (data) => {\r\n    // 返回一个promise对象\r\n    return http.post('/login', data)\r\n}\r\n\r\n// 1.4.2 获取左侧菜单\r\nexport const genMenuList = () => {\r\n    return http.get('/menus')\r\n}\r\n//1.3.1 获取用户数据列表\r\nexport const getUserList = (params) => {\r\n    return http.get('users/', params)\r\n}\r\n//1.3.3 更新用户状态\r\nexport const updateUserState = (data) => {\r\n    return http.put(`users/${data.id}/state/${data.mg_state}`, data)\r\n}\r\n// 1.3.2 添加用户\r\nexport const addUser = (data) => {\r\n    // 返回一个promise对象\r\n    return http.post('users/', data)\r\n}\r\n//1.3.5 编辑用户信息\r\nexport const EditUser = (data) => {\r\n    return http.put(`users/${data.id}`, { email: data.email, mobile: data.mobile })\r\n}\r\n//1.3.6 删除用户信息\r\nexport const deleteUser = (data) => {\r\n    return http.delete(`users/${data}`, data)\r\n}\r\n//1.4.1 请求所有权限信息\r\nexport const getRightsList = () => {\r\n    return http.get('rights/list')\r\n}\r\n//1.5.1 请求所有权限信息\r\nexport const getRolesList = () => {\r\n    return http.get('roles')\r\n}\r\n//1.5.7 删除用户权限\r\nexport const deleteRight = (role, rightId) => {\r\n    return http.delete(`roles/${role.id}/rights/${rightId}`, role, rightId)\r\n}\r\n//1.4.1 请求所有权限列表\r\nexport const getRight = () => {\r\n    return http.get('rights/tree')\r\n}\r\n//1.5.6 请求更改分配权限\r\nexport const allotRight = (id, params) => {\r\n    return http.post(`roles/${id}/rights`, params)\r\n}\r\n//1.3.7 请求分配用户角色\r\nexport const EditRole = (data, params) => {\r\n    return http.put(`users/${data.id}/role`, params)\r\n}\r\n//1.6.1 请求所有商品分类列表\r\nexport const getCateList = (params) => {\r\n    return http.get('categories/', params)\r\n}\r\n//1.6.2 添加商品分类\r\nexport const addCate = (params) => {\r\n    return http.post('categories/', params)\r\n}\r\n//1.6.4 编辑商品分类\r\nexport const editCate = (params) => {\r\n    return http.put(`categories/${params.cat_id}`, params)\r\n}\r\n//1.6.5 删除商品分类\r\nexport const deleteCate = (data) => {\r\n    return http.delete(`categories/${data}`, data)\r\n}\r\n//1.7.1 请求所有商品分类列表\r\nexport const getParamsList = (cateId, params) => {\r\n    return http.get(`categories/${cateId}/attributes`, params)\r\n}\r\n//1.7.2 请求所有商品分类列表\r\nexport const addParams = (cateId, params) => {\r\n    return http.post(`categories/${cateId}/attributes`, params)\r\n}\r\n//1.7.4 请求所有商品分类列表\r\nexport const getParams = (cateId, attrId, params) => {\r\n    return http.get(`categories/${cateId}/attributes/${attrId}`, params)\r\n}\r\n//1.7.5 请求所有商品分类列表\r\nexport const editParams = (cateId, attrId, params) => {\r\n    return http.put(`categories/${cateId}/attributes/${attrId}`, params)\r\n}\r\n//1.7.3 请求所有商品分类列表\r\nexport const deleteParams = (cateId, attrId) => {\r\n    return http.delete(`categories/${cateId}/attributes/${attrId}`)\r\n}\r\n//1.8.1 请求所有商品分类列表\r\nexport const getGoodsList = (params) => {\r\n    return http.get(`goods`, params)\r\n}\r\n//1.8.2 请求所有商品分类列表\r\nexport const addGoods = (params) => {\r\n    return http.post('goods', params)\r\n}\r\n//1.8.3 删除单个商品\r\nexport const deleteGood = (goodId) => {\r\n    return http.delete(`goods/${goodId}`)\r\n}\r\n\r\n//1.10.1  获取订单数据列表\r\nexport const getOrdersList = (params) => {\r\n    return http.get(`orders`, params)\r\n}\r\n//1.10.5  获取订单数据列表\r\n// export const getProgress = (params) => {\r\n//     return http.get(`kuaidi/:804909574412544580`, params)\r\n// }\r\n\r\n//1.11.1 请求折线图数据\r\nexport const getCross = () => {\r\n    return http.get(`reports/type/1`)\r\n}"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","showAddCate","staticClass","cateList","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","$event","handleCateFrom","deletecate","cat_id","querInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addVisible","addCateClose","ref","addCateForm","rules","model","value","cat_name","callback","$$v","$set","expression","parentCateList","cateProps","handleChange","selectedKeys","slot","addCate","editVisible","editFrom","editCateForm","staticRenderFns","name","data","type","label","prop","template","cat_pid","required","message","trigger","children","methods","getCateListed","getCateList","params","then","meta","status","$message","error","result","newSize","newPage","length","$refs","resetFields","validate","valid","success","JSON","parse","stringify","editCate","id","$confirm","confirmButtonText","cancelButtonText","deleteCate","console","log","catch","mounted","component","selectedCateList","handleTabClick","activeName","isBtnDisabled","manyTableData","_l","attr_vals","item","i","handleClose","_s","inputVisible","handleInputConfirm","nativeOn","indexOf","_k","keyCode","inputValue","showInput","showEditDialog","attr_id","removeparams","onlyTableData","addDialogClose","addForm","attr_name","addparams","editDialogClose","editForm","editparams","getParamsData","getParamsList","cateId","sel","forEach","split","addParams","attr_sel","getParams","editParams","deleteParams","trim","push","join","$nextTick","_","saveTagInput","input","focus","splice","computed","http","axios","baseURL","timeout","interceptors","request","use","config","headers","Authorization","window","sessionStorage","getItem","Promise","reject","response","Login","post","genMenuList","get","getUserList","updateUserState","put","mg_state","addUser","EditUser","email","mobile","deleteUser","delete","getRightsList","getRolesList","deleteRight","role","rightId","getRight","allotRight","EditRole","attrId","getGoodsList","addGoods","deleteGood","goodId","getOrdersList","getCross"],"sourceRoot":""}